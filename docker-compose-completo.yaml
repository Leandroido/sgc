services:
  # Banco de dados que precisa para a api funcionar
  postgresdb:
    image: postgres:alpine
    env_file: .env
    environment:
      PGUSER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDB}
      PGTZ: ${PGTZ}
    ports:
      - ${PGPORT}:${PGPORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - database

  # Studio para facilitar o manuseio do PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    networks:
      - database
    depends_on:
      - postgresdb

  # API que funcionará para os requests no frontend
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    env_file: .env
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    networks:
      - back-front-end
      - database
    depends_on:
      - postgresdb

  # front-end da aplicação
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    env_file: .env
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    networks:
      - back-front-end

volumes:
  pgdata:

networks:
  back-front-end:
  database:
